console.log('=== CHECKING SPECIFIC ISSUES ===');
console.log('');

console.log('Issue #3: ðŸ”„ EXISTING PENDING BATCHES');
console.log('What this means:');
console.log('- When a payout order already has batches with status="pending"');
console.log('- The checkPendingBatches() function blocks new matches');
console.log('- This prevents multiple payin orders from matching the same payout simultaneously');
console.log('');
console.log('To check: Run this SQL query:');
console.log('SELECT id, amount, status, pay_in_order_id, created_at FROM instant_payout_batches');
console.log('WHERE order_id = (SELECT id FROM orders WHERE refID = "payout-ffa0b72c-170e-48bf-8877-be76c8f9816c")');
console.log('AND status = "pending";');
console.log('');
console.log('If you find pending batches:');
console.log('- They are blocking new matches');
console.log('- You need to either confirm them or expire them');
console.log('- Or use the flag-based timeout system to handle them');
console.log('');

console.log('Issue #4: ðŸ“Š PAYIN STATUS = "pending"');
console.log('This is likely the MAIN ISSUE!');
console.log('');
console.log('Current situation:');
console.log('- Your payin orders #14601 and #14600 have paymentStatus = "pending"');
console.log('- But the partial matching logic looks for paymentStatus = "unassigned"');
console.log('');
console.log('Why this happens:');
console.log('- Payin orders become "pending" when they are assigned to a payout batch');
console.log('- "pending" means they are waiting for customer confirmation');
console.log('- "unassigned" means they are available for new matching');
console.log('');
console.log('The matching logic in findPartialAmountMatch() looks for:');
console.log('AND paymentStatus = "unassigned"');
console.log('');
console.log('So if your payin orders are "pending", they won\'t be considered for new matches!');
console.log('');

console.log('Issue #5: ðŸ’° ZERO BALANCE CHECK');
console.log('Where to check instant_balance:');
console.log('');
console.log('Run this SQL query:');
console.log('SELECT id, refID, amount, instant_balance, paymentStatus FROM orders');
console.log('WHERE refID = "payout-ffa0b72c-170e-48bf-8877-be76c8f9816c";');
console.log('');
console.log('What the values mean:');
console.log('- amount: Original payout amount (should be 5)');
console.log('- instant_balance: Remaining amount available for matching');
console.log('- If instant_balance = 0, no more matching possible');
console.log('- If instant_balance = 5, full amount still available');
console.log('- If instant_balance = 2, means 3 was already processed');
console.log('');

console.log('=== DIAGNOSIS SUMMARY ===');
console.log('');
console.log('Most likely issue: PAYIN STATUS = "pending"');
console.log('');
console.log('What probably happened:');
console.log('1. Your payin orders #14601 and #14600 were created');
console.log('2. They were initially "unassigned"');
console.log('3. They got matched to your payout order');
console.log('4. Batches were created in instant_payout_batches table');
console.log('5. Payin status changed to "pending" (waiting for confirmation)');
console.log('6. Now they can\'t be matched again because they\'re not "unassigned"');
console.log('');

console.log('=== SOLUTION OPTIONS ===');
console.log('');
console.log('Option 1: Check if batches already exist');
console.log('- Maybe the matching already worked and batches were created');
console.log('- Check instant_payout_batches table for these payin orders');
console.log('');
console.log('Option 2: Reset payin orders to "unassigned"');
console.log('- Only if no batches exist or you want to restart the process');
console.log('- UPDATE orders SET paymentStatus = "unassigned" WHERE id IN (14601, 14600);');
console.log('');
console.log('Option 3: Create new payin orders');
console.log('- Create fresh payin orders with "unassigned" status');
console.log('- Test the matching with these new orders');
console.log('');

console.log('=== DEBUGGING QUERIES TO RUN ===');
console.log('');
console.log('1. Check payout balance:');
console.log('SELECT id, refID, amount, instant_balance, paymentStatus FROM orders');
console.log('WHERE refID = "payout-ffa0b72c-170e-48bf-8877-be76c8f9816c";');
console.log('');
console.log('2. Check payin status:');
console.log('SELECT id, amount, paymentStatus, vendor FROM orders WHERE id IN (14601, 14600);');
console.log('');
console.log('3. Check existing batches:');
console.log('SELECT * FROM instant_payout_batches');
console.log('WHERE pay_in_order_id IN (14601, 14600)');
console.log('OR order_id = (SELECT id FROM orders WHERE refID = "payout-ffa0b72c-170e-48bf-8877-be76c8f9816c");');
console.log('');
console.log('4. Check for pending batches blocking new matches:');
console.log('SELECT id, amount, status, pay_in_order_id FROM instant_payout_batches');
console.log('WHERE order_id = (SELECT id FROM orders WHERE refID = "payout-ffa0b72c-170e-48bf-8877-be76c8f9816c")');
console.log('AND status = "pending";');
console.log('');

console.log('Run these queries and share the results to identify the exact issue!');
